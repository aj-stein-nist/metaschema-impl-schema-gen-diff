{
  "$schema" : "http://json-schema.org/draft-07/schema#",
  "$id" : "http://csrc.nist.gov/ns/oscal/1.0/oscal-catalog-1.0.4-schema.json",
  "$comment" : "OSCAL Control Catalog Model",
  "type" : "object",
  "definitions" : {
    "OscalCatalogCatalogAssemblyType" : {
      "$id" : "#/definitions/OscalCatalogCatalogAssemblyType",
      "title" : "Catalog",
      "description" : "A structured, [organized collection](https://pages.nist.gov/OSCAL/concepts/terminology/#catalog) of control information.\n\nCatalogs may use one or more `group` objects to subdivide the control contents of a catalog.",
      "type" : "object",
      "properties" : {
        "uuid" : {
          "$ref" : "#/definitions/OscalCatalogCatalogUuidFlagType"
        },
        "metadata" : {
          "$ref" : "#/definitions/OscalMetadataMetadataAssemblyType"
        },
        "params" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OscalControlCommonParamAssemblyType"
          },
          "minItems" : 1
        },
        "controls" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OscalCatalogControlAssemblyType"
          },
          "minItems" : 1
        },
        "groups" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OscalCatalogGroupAssemblyType"
          },
          "minItems" : 1
        },
        "back-matter" : {
          "$ref" : "#/definitions/OscalMetadataBackMatterAssemblyType"
        }
      },
      "required" : [ "uuid", "metadata" ],
      "additionalProperties" : false
    },
    "OscalCatalogCatalogUuidFlagType" : {
      "$id" : "#/definitions/OscalCatalogCatalogUuidFlagType",
      "title" : "Catalog Universally Unique Identifier",
      "description" : "Provides a globally unique means to identify a given catalog instance.",
      "$ref" : "#/definitions/UUIDDatatype"
    },
    "OscalMetadataMetadataAssemblyType" : {
      "$id" : "#/definitions/OscalMetadataMetadataAssemblyType",
      "title" : "Document Metadata",
      "description" : "Provides information about the containing document, and defines concepts that are shared across the document.\n\nAll OSCAL documents use the same metadata structure, that provides a consistent way of expressing OSCAL document metadata across all OSCAL models. The metadata section also includes declarations of individual objects (i.e., roles, location, parties) that may be referenced within and across linked OSCAL documents.\n\nThe metadata in an OSCAL document has few required fields, representing only the bare minimum data needed to differentiate one instance from another. Tools and users creating OSCAL documents may choose to use any of the optional fields, as well as extension mechanisms (e.g., properties, links) to go beyond this minimum to suit their use cases.\n\nA publisher of OSCAL content can use the `published`, `last-modified`, and `version` fields to establish information about an individual in a sequence of successive revisions of a given OSCAL-based publication. The metadata for a previous revision can be represented as a `revision` within this object. Links may also be provided using the `predecessor-version` and `successor-version` link relations to provide for direct access to the related resource. These relations can be provided as a link child of this object or as `link` within a given `revision`.\n\nA `responsible-party` entry in this context refers to roles and parties that have responsibility relative to the production, review, publication, and use of the containing document.",
      "type" : "object",
      "properties" : {
        "title" : {
          "$ref" : "#/definitions/OscalMetadataMetadataTitleFieldType"
        },
        "published" : {
          "$ref" : "#/definitions/OscalMetadataPublishedFieldType"
        },
        "last-modified" : {
          "$ref" : "#/definitions/OscalMetadataLastModifiedFieldType"
        },
        "version" : {
          "$ref" : "#/definitions/OscalMetadataVersionFieldType"
        },
        "oscal-version" : {
          "$ref" : "#/definitions/OscalMetadataOscalVersionFieldType"
        },
        "revisions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OscalMetadataMetadataRevisionAssemblyType"
          },
          "minItems" : 1
        },
        "document-ids" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OscalMetadataDocumentIdFieldType"
          },
          "minItems" : 1
        },
        "props" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OscalMetadataPropAssemblyType"
          },
          "minItems" : 1
        },
        "links" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OscalMetadataLinkAssemblyType"
          },
          "minItems" : 1
        },
        "roles" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OscalMetadataMetadataRoleAssemblyType"
          },
          "minItems" : 1
        },
        "locations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OscalMetadataMetadataLocationAssemblyType"
          },
          "minItems" : 1
        },
        "parties" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OscalMetadataMetadataPartyAssemblyType"
          },
          "minItems" : 1
        },
        "responsible-parties" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OscalMetadataResponsiblePartyAssemblyType"
          },
          "minItems" : 1
        },
        "actions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OscalMetadataActionAssemblyType"
          },
          "minItems" : 1
        },
        "remarks" : {
          "$ref" : "#/definitions/OscalMetadataRemarksFieldType"
        }
      },
      "required" : [ "title", "last-modified", "version", "oscal-version" ],
      "additionalProperties" : false
    },
    "OscalMetadataMetadataTitleFieldType" : {
      "$id" : "#/definitions/OscalMetadataMetadataTitleFieldType",
      "title" : "Document Title",
      "description" : "A name given to the document, which may be used by a tool for display and navigation.",
      "$ref" : "#/definitions/MarkupLineDatatype"
    },
    "OscalMetadataPublishedFieldType" : {
      "$id" : "#/definitions/OscalMetadataPublishedFieldType",
      "title" : "Publication Timestamp",
      "description" : "The date and time the document was last made available.\n\nTypically, this date value will be machine-generated at the time the containing document is published.\n\nIn some cases, an OSCAL document may be derived from some source material provided in a different format. In such a case, the `published` value should indicate when the OSCAL document instance was last published, not the source material.",
      "$ref" : "#/definitions/DateTimeWithTimezoneDatatype"
    },
    "OscalMetadataLastModifiedFieldType" : {
      "$id" : "#/definitions/OscalMetadataLastModifiedFieldType",
      "title" : "Last Modified Timestamp",
      "description" : "The date and time the document was last stored for later retrieval.\n\nThis value represents the point in time when the OSCAL document was last updated, or at the point of creation the creation date. Typically, this date value will be machine generated at time of creation or modification. Ideally, this field will be managed by the editing tool or service used to make modifications when storing the modified document.\n\nThe intent of the last modified timestamp is to distinguish between significant change milestones when the document may be accessed by multiple entities. This allows a given entity to differentiate between mutiple document states at specific points in time. It is possible to make multiple modifications to the document without storing these changes. In such a case, the last modified timestamp might not be updated until the document is finally stored.\n\nIn some cases, an OSCAL document may be derived from some source material in a different format. In such a case, the `last-modified` value should indicate the last modification time of the OSCAL document instance, not the source material.",
      "$ref" : "#/definitions/DateTimeWithTimezoneDatatype"
    },
    "OscalMetadataVersionFieldType" : {
      "$id" : "#/definitions/OscalMetadataVersionFieldType",
      "title" : "Document Version",
      "description" : "Used to distinguish a specific revision of an OSCAL document from other previous and future versions.\n\nA version may be a release number, sequence number, date, or other identifier sufficient to distinguish between different document revisions.\n\nWhile not required, it is recommended that OSCAL content authors use [Semantic Versioning](https://semver.org/spec/v2.0.0.html) as the version format. This allows for the easy identification of a version tree consisting of major, minor, and patch numbers.\n\nA version is typically set by the document owner or by the tool used to maintain the content.",
      "$ref" : "#/definitions/StringDatatype"
    },
    "OscalMetadataOscalVersionFieldType" : {
      "$id" : "#/definitions/OscalMetadataOscalVersionFieldType",
      "title" : "OSCAL Version",
      "description" : "The OSCAL model version the document was authored against and will conform to as valid.\n\nIndicates the version of the OSCAL model to which the document conforms, for example \"1.1.0\" or \"1.0.0-milestone1\". That can be used as a hint for a tool indicating which version of the OSCAL XML or JSON schema to use for validation.\n\nThe OSCAL version serves a different purpose from the document version and is used to represent a different concept. If both have the same value, this is coincidental.",
      "$ref" : "#/definitions/StringDatatype"
    },
    "OscalMetadataMetadataRevisionAssemblyType" : {
      "$id" : "#/definitions/OscalMetadataMetadataRevisionAssemblyType",
      "title" : "Revision History Entry",
      "description" : "An entry in a sequential list of revisions to the containing document, expected to be in reverse chronological order (i.e. latest first).\n\nWhile `published`, `last-modified`, and `oscal-version` are not required, values for these entries should be provided if the information is known. A `link` with a `rel` of \"source\" should be provided if the information is known.",
      "type" : "object",
      "properties" : {
        "title" : {
          "$ref" : "#/definitions/OscalMetadataMetadataRevisionTitleFieldType"
        },
        "published" : {
          "$ref" : "#/definitions/OscalMetadataPublishedFieldType"
        },
        "last-modified" : {
          "$ref" : "#/definitions/OscalMetadataLastModifiedFieldType"
        },
        "version" : {
          "$ref" : "#/definitions/OscalMetadataVersionFieldType"
        },
        "oscal-version" : {
          "$ref" : "#/definitions/OscalMetadataOscalVersionFieldType"
        },
        "props" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OscalMetadataPropAssemblyType"
          },
          "minItems" : 1
        },
        "links" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OscalMetadataLinkAssemblyType"
          },
          "minItems" : 1
        },
        "remarks" : {
          "$ref" : "#/definitions/OscalMetadataRemarksFieldType"
        }
      },
      "required" : [ "version" ],
      "additionalProperties" : false
    },
    "OscalMetadataMetadataRevisionTitleFieldType" : {
      "$id" : "#/definitions/OscalMetadataMetadataRevisionTitleFieldType",
      "title" : "Document Title",
      "description" : "A name given to the document revision, which may be used by a tool for display and navigation.",
      "$ref" : "#/definitions/MarkupLineDatatype"
    },
    "OscalMetadataPropAssemblyType" : {
      "$id" : "#/definitions/OscalMetadataPropAssemblyType",
      "title" : "Property",
      "description" : "An attribute, characteristic, or quality of the containing object expressed as a namespace qualified name/value pair.\n\nProperties permit the deployment and management of arbitrary controlled values, within OSCAL objects. A property can be included for any purpose useful to an application or implementation. Typically, properties will be used to sort, filter, select, order, and arrange OSCAL content objects, to relate OSCAL objects to one another, or to associate an OSCAL object to class hierarchies, taxonomies, or external authorities. Thus, the lexical composition of properties may be constrained by external processes to ensure consistency.\n\nProperty allows for associated remarks that describe why the specific property value was applied to the containing object, or the significance of the value in the context of the containing object.",
      "type" : "object",
      "properties" : {
        "name" : {
          "$ref" : "#/definitions/OscalMetadataPropNameFlagType"
        },
        "uuid" : {
          "$ref" : "#/definitions/OscalMetadataPropUuidFlagType"
        },
        "ns" : {
          "$ref" : "#/definitions/OscalMetadataPropNsFlagType"
        },
        "value" : {
          "$ref" : "#/definitions/OscalMetadataPropValueFlagType"
        },
        "class" : {
          "$ref" : "#/definitions/OscalMetadataPropClassFlagType"
        },
        "group" : {
          "$ref" : "#/definitions/OscalMetadataPropGroupFlagType"
        },
        "remarks" : {
          "$ref" : "#/definitions/OscalMetadataRemarksFieldType"
        }
      },
      "required" : [ "name", "value" ],
      "additionalProperties" : false
    },
    "OscalMetadataPropNameFlagType" : {
      "$id" : "#/definitions/OscalMetadataPropNameFlagType",
      "title" : "Property Name",
      "description" : "A textual label, within a namespace, that uniquely identifies a specific attribute, characteristic, or quality of the property's containing object.",
      "$ref" : "#/definitions/TokenDatatype"
    },
    "OscalMetadataPropUuidFlagType" : {
      "$id" : "#/definitions/OscalMetadataPropUuidFlagType",
      "title" : "Property Universally Unique Identifier",
      "description" : "A unique identifier for a property.",
      "$ref" : "#/definitions/UUIDDatatype"
    },
    "OscalMetadataPropNsFlagType" : {
      "$id" : "#/definitions/OscalMetadataPropNsFlagType",
      "title" : "Property Namespace",
      "description" : "A namespace qualifying the property's name. This allows different organizations to associate distinct semantics with the same name.\n\nThis value must be an [absolute URI](https://pages.nist.gov/OSCAL/concepts/uri-use/#absolute-uri) that serves as a [naming system identifier](https://pages.nist.gov/OSCAL/concepts/uri-use/#use-as-a-naming-system-identifier).\n\nWhen a `ns` is not provided, its value should be assumed to be `http://csrc.nist.gov/ns/oscal` and the name should be a name defined by the associated OSCAL model.",
      "$ref" : "#/definitions/URIDatatype"
    },
    "OscalMetadataPropValueFlagType" : {
      "$id" : "#/definitions/OscalMetadataPropValueFlagType",
      "title" : "Property Value",
      "description" : "Indicates the value of the attribute, characteristic, or quality.",
      "$ref" : "#/definitions/StringDatatype"
    },
    "OscalMetadataPropClassFlagType" : {
      "$id" : "#/definitions/OscalMetadataPropClassFlagType",
      "title" : "Property Class",
      "description" : "A textual label that provides a sub-type or characterization of the property's `name`.\n\nThis can be used to further distinguish or discriminate between the semantics of multiple properties of the same object with the same `name` and `ns`, or to group properties into categories.\n\nA `class` can be used in validation rules to express extra constraints over named items of a specific `class` value. It is available for grouping, but unlike `group` is not expected specifically to designate any group membership as such.",
      "$ref" : "#/definitions/TokenDatatype"
    },
    "OscalMetadataPropGroupFlagType" : {
      "$id" : "#/definitions/OscalMetadataPropGroupFlagType",
      "title" : "Property Group",
      "description" : "An identifier for relating distinct sets of properties.\n\nDifferent sets of properties may relate to separate contexts. Declare a group on a property to associate it with one or more other properties in a given context.",
      "$ref" : "#/definitions/TokenDatatype"
    },
    "OscalMetadataRemarksFieldType" : {
      "$id" : "#/definitions/OscalMetadataRemarksFieldType",
      "title" : "Remarks",
      "description" : "Additional commentary about the containing object.\n\nThe `remarks` field SHOULD not be used to store arbitrary data. Instead, a `prop` or `link` should be used to annotate or reference any additional data not formally supported by OSCAL.",
      "$ref" : "#/definitions/MarkupMultilineDatatype"
    },
    "OscalMetadataLinkAssemblyType" : {
      "$id" : "#/definitions/OscalMetadataLinkAssemblyType",
      "title" : "Link",
      "description" : "A reference to a local or remote resource, that has a specific relation to the containing object.\n\nTo provide a cryptographic hash for a remote target resource, a local reference to a back matter `resource` is needed. The resource allows one or more hash values to be provided using the `rlink/hash` object.\n\nThe OSCAL `link` is a roughly based on the HTML [link element](https://www.w3.org/TR/html401/struct/links.html#edef-LINK).",
      "type" : "object",
      "properties" : {
        "href" : {
          "$ref" : "#/definitions/OscalMetadataLinkHrefFlagType"
        },
        "rel" : {
          "$ref" : "#/definitions/OscalMetadataLinkRelFlagType"
        },
        "media-type" : {
          "$ref" : "#/definitions/OscalMetadataMediaTypeFlagType"
        },
        "resource-fragment" : {
          "$ref" : "#/definitions/OscalMetadataLinkResourceFragmentFlagType"
        },
        "text" : {
          "$ref" : "#/definitions/OscalMetadataLinkTextFieldType"
        }
      },
      "required" : [ "href" ],
      "additionalProperties" : false
    },
    "OscalMetadataLinkHrefFlagType" : {
      "$id" : "#/definitions/OscalMetadataLinkHrefFlagType",
      "title" : "Hypertext Reference",
      "description" : "A resolvable URL reference to a resource.\n\nThis value may be one of:\n\n1. an [absolute URI](https://pages.nist.gov/OSCAL/concepts/uri-use/#absolute-uri) that points to a network resolvable resource,\n2. a [relative reference](https://pages.nist.gov/OSCAL/concepts/uri-use/#relative-reference) pointing to a network resolvable resource whose base URI is the URI of the containing document, or\n3. a bare URI fragment (i.e., \\`#uuid\\`) pointing to an OSCAL object by the objects identifier (e.g., id, uuid) in this or an imported document (see [linking to another OSCAL object](https://pages.nist.gov/OSCAL/concepts/uri-use/#linking-to-another-oscal-object)). The specific object type will differ based on the link relationship type.",
      "$ref" : "#/definitions/URIReferenceDatatype"
    },
    "OscalMetadataLinkRelFlagType" : {
      "$id" : "#/definitions/OscalMetadataLinkRelFlagType",
      "title" : "Link Relation Type",
      "description" : "Describes the type of relationship provided by the link's hypertext reference. This can be an indicator of the link's purpose.",
      "$ref" : "#/definitions/TokenDatatype"
    },
    "OscalMetadataMediaTypeFlagType" : {
      "$id" : "#/definitions/OscalMetadataMediaTypeFlagType",
      "title" : "Media Type",
      "description" : "A label that indicates the nature of a resource, as a data serialization or format.\n\nThe Internet Assigned Numbers Authority (IANA) [Media\nTypes Registry](https://www.iana.org/assignments/media-types/media-types.xhtml) defines a standardized set of media types, which may be used\nhere.\n\nThe `application/oscal+xml`, `application/oscal+json` or `application/oscal+yaml` media types SHOULD be used when referencing OSCAL XML, JSON, or YAML resources respectively.\n\n\\*\\*Note: There is no official media type for YAML at this time.\\*\\* OSCAL documents should specify `application/yaml` for general YAML content, or `application/oscal+yaml` for YAML-based OSCAL content. This approach aligns with use of a structured name suffix, per [RFC 6838 Section 4.2.8](https://www.rfc-editor.org/rfc/rfc6838.html#section-4.2.8).\n\nSome earlier OSCAL content incorporated the model into the media type. For example: `application/oscal.catalog+xml`. This practice SHOULD be avoided, since the OSCAL model can be detected by parsing the initial content of the referenced resource.",
      "$ref" : "#/definitions/StringDatatype"
    },
    "OscalMetadataLinkResourceFragmentFlagType" : {
      "$id" : "#/definitions/OscalMetadataLinkResourceFragmentFlagType",
      "title" : "Resource Fragment",
      "description" : "In case where the `href` points to a `back-matter/resource`, this value will indicate the URI [fragment](https://www.rfc-editor.org/rfc/rfc3986#section-3.5) to append to any `rlink` associated with the resource. This value MUST be [URI encoded](https://www.rfc-editor.org/rfc/rfc3986#section-2.1).",
      "$ref" : "#/definitions/StringDatatype"
    },
    "OscalMetadataLinkTextFieldType" : {
      "$id" : "#/definitions/OscalMetadataLinkTextFieldType",
      "title" : "Link Text",
      "description" : "A textual label to associate with the link, which may be used for presentation in a tool.",
      "$ref" : "#/definitions/MarkupLineDatatype"
    },
    "OscalMetadataDocumentIdFieldType" : {
      "$id" : "#/definitions/OscalMetadataDocumentIdFieldType",
      "title" : "Document Identifier",
      "description" : "A document identifier qualified by an identifier `scheme`.\n\nA document identifier provides a [globally unique](https://pages.nist.gov/OSCAL/concepts/identifier-use/#globally-unique) identifier with a [cross-instance](https://pages.nist.gov/OSCAL/concepts/identifier-use/#cross-instance) scope that is used for a group of documents that are to be treated as different versions, representations or digital surrogates of the same document.\n\nA document identifier provides an additional data point for identifying a document that can be assigned by a publisher or organization for purposes in a wider system, such as a digital object identifier (DOI) or a local content management system identifier.\n\nUse of a document identifier allows for document creators to associate sets of documents that are related in some way by the same `document-id`.\n\nAn OSCAL document always has an implicit document identifier provided by the document's UUID, defined by the `uuid` on the top-level object. Having a default UUID-based identifier ensures all documents can be minimally identified when other document identifiers are not provided.",
      "type" : "object",
      "properties" : {
        "scheme" : {
          "$ref" : "#/definitions/OscalMetadataDocumentIdSchemeFlagType"
        },
        "identifier" : {
          "$ref" : "#/definitions/StringDatatype"
        }
      },
      "required" : [ "identifier" ],
      "additionalProperties" : false
    },
    "OscalMetadataDocumentIdSchemeFlagType" : {
      "$id" : "#/definitions/OscalMetadataDocumentIdSchemeFlagType",
      "title" : "Document Identification Scheme",
      "description" : "Qualifies the kind of document identifier using a URI. If the scheme is not provided the value of the element will be interpreted as a string of characters.\n\nThis value must be an [absolute URI](https://pages.nist.gov/OSCAL/concepts/uri-use/#absolute-uri) that serves as a [naming system identifier](https://pages.nist.gov/OSCAL/concepts/uri-use/#use-as-a-naming-system-identifier).",
      "$ref" : "#/definitions/URIDatatype"
    },
    "OscalMetadataMetadataRoleAssemblyType" : {
      "$id" : "#/definitions/OscalMetadataMetadataRoleAssemblyType",
      "title" : "Role",
      "description" : "Defines a function, which might be assigned to a party in a specific situation.\n\nPermissible values to be determined closer to the application (e.g. by a receiving authority).\n\nOSCAL has defined a set of standardized roles for consistent use in OSCAL documents. This allows tools consuming OSCAL content to infer specific semantics when these roles are used. These roles are documented in the specific contexts of their use (e.g., responsible-party, responsible-role). When using such a role, it is necessary to define these roles in this list, which will then allow such a role to be referenced.",
      "type" : "object",
      "properties" : {
        "id" : {
          "$ref" : "#/definitions/OscalMetadataMetadataRoleIdFlagType"
        },
        "title" : {
          "$ref" : "#/definitions/OscalMetadataMetadataRoleTitleFieldType"
        },
        "short-name" : {
          "$ref" : "#/definitions/OscalMetadataMetadataRoleShortNameFieldType"
        },
        "description" : {
          "$ref" : "#/definitions/OscalMetadataMetadataRoleDescriptionFieldType"
        },
        "props" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OscalMetadataPropAssemblyType"
          },
          "minItems" : 1
        },
        "links" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OscalMetadataLinkAssemblyType"
          },
          "minItems" : 1
        },
        "remarks" : {
          "$ref" : "#/definitions/OscalMetadataRemarksFieldType"
        }
      },
      "required" : [ "id", "title" ],
      "additionalProperties" : false
    },
    "OscalMetadataMetadataRoleIdFlagType" : {
      "$id" : "#/definitions/OscalMetadataMetadataRoleIdFlagType",
      "title" : "Role Identifier",
      "description" : "A unique identifier for the role.",
      "$ref" : "#/definitions/TokenDatatype"
    },
    "OscalMetadataMetadataRoleTitleFieldType" : {
      "$id" : "#/definitions/OscalMetadataMetadataRoleTitleFieldType",
      "title" : "Role Title",
      "description" : "A name given to the role, which may be used by a tool for display and navigation.",
      "$ref" : "#/definitions/MarkupLineDatatype"
    },
    "OscalMetadataMetadataRoleShortNameFieldType" : {
      "$id" : "#/definitions/OscalMetadataMetadataRoleShortNameFieldType",
      "title" : "Role Short Name",
      "description" : "A short common name, abbreviation, or acronym for the role.",
      "$ref" : "#/definitions/StringDatatype"
    },
    "OscalMetadataMetadataRoleDescriptionFieldType" : {
      "$id" : "#/definitions/OscalMetadataMetadataRoleDescriptionFieldType",
      "title" : "Role Description",
      "description" : "A summary of the role's purpose and associated responsibilities.",
      "$ref" : "#/definitions/MarkupMultilineDatatype"
    },
    "OscalMetadataMetadataLocationAssemblyType" : {
      "$id" : "#/definitions/OscalMetadataMetadataLocationAssemblyType",
      "title" : "Location",
      "description" : "A physical point of presence, which may be associated with people, organizations, or other concepts within the current or linked OSCAL document.\n\nAn address might be sensitive in nature. In such cases a title, mailing address, email-address, and/or phone number may be used instead.",
      "type" : "object",
      "properties" : {
        "uuid" : {
          "$ref" : "#/definitions/OscalMetadataMetadataLocationUuidFlagType"
        },
        "title" : {
          "$ref" : "#/definitions/OscalMetadataMetadataLocationTitleFieldType"
        },
        "address" : {
          "$ref" : "#/definitions/OscalMetadataAddressAssemblyType"
        },
        "email-addresses" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OscalMetadataEmailAddressFieldType"
          },
          "minItems" : 1
        },
        "telephone-numbers" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OscalMetadataTelephoneNumberFieldType"
          },
          "minItems" : 1
        },
        "urls" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OscalMetadataMetadataLocationUrlFieldType"
          },
          "minItems" : 1
        },
        "props" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OscalMetadataPropAssemblyType"
          },
          "minItems" : 1
        },
        "links" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OscalMetadataLinkAssemblyType"
          },
          "minItems" : 1
        },
        "remarks" : {
          "$ref" : "#/definitions/OscalMetadataRemarksFieldType"
        }
      },
      "required" : [ "uuid" ],
      "additionalProperties" : false
    },
    "OscalMetadataMetadataLocationUuidFlagType" : {
      "$id" : "#/definitions/OscalMetadataMetadataLocationUuidFlagType",
      "title" : "Location Universally Unique Identifier",
      "description" : "A unique ID for the location, for reference.",
      "$ref" : "#/definitions/UUIDDatatype"
    },
    "OscalMetadataMetadataLocationTitleFieldType" : {
      "$id" : "#/definitions/OscalMetadataMetadataLocationTitleFieldType",
      "title" : "Location Title",
      "description" : "A name given to the location, which may be used by a tool for display and navigation.",
      "$ref" : "#/definitions/MarkupLineDatatype"
    },
    "OscalMetadataAddressAssemblyType" : {
      "$id" : "#/definitions/OscalMetadataAddressAssemblyType",
      "title" : "Address",
      "description" : "A postal address for the location.",
      "type" : "object",
      "properties" : {
        "type" : {
          "$ref" : "#/definitions/OscalMetadataLocationTypeFlagType"
        },
        "addr-lines" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OscalMetadataAddrLineFieldType"
          },
          "minItems" : 1
        },
        "city" : {
          "$ref" : "#/definitions/OscalMetadataAddressCityFieldType"
        },
        "state" : {
          "$ref" : "#/definitions/OscalMetadataAddressStateFieldType"
        },
        "postal-code" : {
          "$ref" : "#/definitions/OscalMetadataAddressPostalCodeFieldType"
        },
        "country" : {
          "$ref" : "#/definitions/OscalMetadataAddressCountryFieldType"
        }
      },
      "additionalProperties" : false
    },
    "OscalMetadataLocationTypeFlagType" : {
      "$id" : "#/definitions/OscalMetadataLocationTypeFlagType",
      "title" : "Address Type",
      "description" : "Indicates the type of address.",
      "$ref" : "#/definitions/TokenDatatype"
    },
    "OscalMetadataAddrLineFieldType" : {
      "$id" : "#/definitions/OscalMetadataAddrLineFieldType",
      "title" : "Address line",
      "description" : "A single line of an address.",
      "$ref" : "#/definitions/StringDatatype"
    },
    "OscalMetadataAddressCityFieldType" : {
      "$id" : "#/definitions/OscalMetadataAddressCityFieldType",
      "title" : "City",
      "description" : "City, town or geographical region for the mailing address.",
      "$ref" : "#/definitions/StringDatatype"
    },
    "OscalMetadataAddressStateFieldType" : {
      "$id" : "#/definitions/OscalMetadataAddressStateFieldType",
      "title" : "State",
      "description" : "State, province or analogous geographical region for a mailing address.",
      "$ref" : "#/definitions/StringDatatype"
    },
    "OscalMetadataAddressPostalCodeFieldType" : {
      "$id" : "#/definitions/OscalMetadataAddressPostalCodeFieldType",
      "title" : "Postal Code",
      "description" : "Postal or ZIP code for mailing address.",
      "$ref" : "#/definitions/StringDatatype"
    },
    "OscalMetadataAddressCountryFieldType" : {
      "$id" : "#/definitions/OscalMetadataAddressCountryFieldType",
      "title" : "Country Code",
      "description" : "The ISO 3166-1 alpha-2 country code for the mailing address.",
      "$ref" : "#/definitions/StringDatatype"
    },
    "OscalMetadataEmailAddressFieldType" : {
      "$id" : "#/definitions/OscalMetadataEmailAddressFieldType",
      "title" : "Email Address",
      "description" : "An email address as defined by [RFC 5322 Section\n3.4.1](https://tools.ietf.org/html/rfc5322#section-3.4.1).",
      "$ref" : "#/definitions/EmailAddressDatatype"
    },
    "OscalMetadataTelephoneNumberFieldType" : {
      "$id" : "#/definitions/OscalMetadataTelephoneNumberFieldType",
      "title" : "Telephone Number",
      "description" : "A telephone service number as defined by [ITU-T E.164](https://www.itu.int/rec/T-REC-E.164-201011-I/en).",
      "type" : "object",
      "properties" : {
        "type" : {
          "$ref" : "#/definitions/OscalMetadataTelephoneNumberTypeFlagType"
        },
        "number" : {
          "$ref" : "#/definitions/StringDatatype"
        }
      },
      "required" : [ "number" ],
      "additionalProperties" : false
    },
    "OscalMetadataTelephoneNumberTypeFlagType" : {
      "$id" : "#/definitions/OscalMetadataTelephoneNumberTypeFlagType",
      "title" : "type flag",
      "description" : "Indicates the type of phone number.",
      "$ref" : "#/definitions/StringDatatype"
    },
    "OscalMetadataMetadataLocationUrlFieldType" : {
      "$id" : "#/definitions/OscalMetadataMetadataLocationUrlFieldType",
      "title" : "Location URL",
      "description" : "The uniform resource locator (URL) for a web site or other resource associated with the location.\n\nThis data field is deprecated in favor of using a link with an appropriate relationship.",
      "$ref" : "#/definitions/URIDatatype"
    },
    "OscalMetadataMetadataPartyAssemblyType" : {
      "$id" : "#/definitions/OscalMetadataMetadataPartyAssemblyType",
      "title" : "Party",
      "description" : "An organization or person, which may be associated with roles or other concepts within the current or linked OSCAL document.\n\nA party can be optionally associated with either an address or a location. While providing a meaningful location for a party is desired, there are some cases where it might not be possible to provide an exact location or even any location.",
      "type" : "object",
      "anyOf" : [ {
        "properties" : {
          "uuid" : {
            "$ref" : "#/definitions/OscalMetadataMetadataPartyUuidFlagType"
          },
          "type" : {
            "$ref" : "#/definitions/OscalMetadataMetadataPartyTypeFlagType"
          },
          "name" : {
            "$ref" : "#/definitions/OscalMetadataMetadataPartyNameFieldType"
          },
          "short-name" : {
            "$ref" : "#/definitions/OscalMetadataMetadataPartyShortNameFieldType"
          },
          "external-ids" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/OscalMetadataMetadataPartyExternalIdFieldType"
            },
            "minItems" : 1
          },
          "props" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/OscalMetadataPropAssemblyType"
            },
            "minItems" : 1
          },
          "links" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/OscalMetadataLinkAssemblyType"
            },
            "minItems" : 1
          },
          "email-addresses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/OscalMetadataEmailAddressFieldType"
            },
            "minItems" : 1
          },
          "telephone-numbers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/OscalMetadataTelephoneNumberFieldType"
            },
            "minItems" : 1
          },
          "member-of-organizations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/OscalMetadataMetadataPartyMemberOfOrganizationFieldType"
            },
            "minItems" : 1
          },
          "remarks" : {
            "$ref" : "#/definitions/OscalMetadataRemarksFieldType"
          },
          "addresses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/OscalMetadataAddressAssemblyType"
            },
            "minItems" : 1
          }
        },
        "required" : [ "uuid", "type" ],
        "additionalProperties" : false
      }, {
        "properties" : {
          "uuid" : {
            "$ref" : "#/definitions/OscalMetadataMetadataPartyUuidFlagType"
          },
          "type" : {
            "$ref" : "#/definitions/OscalMetadataMetadataPartyTypeFlagType"
          },
          "name" : {
            "$ref" : "#/definitions/OscalMetadataMetadataPartyNameFieldType"
          },
          "short-name" : {
            "$ref" : "#/definitions/OscalMetadataMetadataPartyShortNameFieldType"
          },
          "external-ids" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/OscalMetadataMetadataPartyExternalIdFieldType"
            },
            "minItems" : 1
          },
          "props" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/OscalMetadataPropAssemblyType"
            },
            "minItems" : 1
          },
          "links" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/OscalMetadataLinkAssemblyType"
            },
            "minItems" : 1
          },
          "email-addresses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/OscalMetadataEmailAddressFieldType"
            },
            "minItems" : 1
          },
          "telephone-numbers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/OscalMetadataTelephoneNumberFieldType"
            },
            "minItems" : 1
          },
          "member-of-organizations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/OscalMetadataMetadataPartyMemberOfOrganizationFieldType"
            },
            "minItems" : 1
          },
          "remarks" : {
            "$ref" : "#/definitions/OscalMetadataRemarksFieldType"
          },
          "location-uuids" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/OscalMetadataLocationUuidFieldType"
            },
            "minItems" : 1
          }
        },
        "required" : [ "uuid", "type" ],
        "additionalProperties" : false
      } ]
    },
    "OscalMetadataMetadataPartyUuidFlagType" : {
      "$id" : "#/definitions/OscalMetadataMetadataPartyUuidFlagType",
      "title" : "Party Universally Unique Identifier",
      "description" : "A unique identifier for the party.",
      "$ref" : "#/definitions/UUIDDatatype"
    },
    "OscalMetadataMetadataPartyTypeFlagType" : {
      "$id" : "#/definitions/OscalMetadataMetadataPartyTypeFlagType",
      "title" : "Party Type",
      "description" : "A category describing the kind of party the object describes.",
      "$ref" : "#/definitions/StringDatatype"
    },
    "OscalMetadataMetadataPartyNameFieldType" : {
      "$id" : "#/definitions/OscalMetadataMetadataPartyNameFieldType",
      "title" : "Party Name",
      "description" : "The full name of the party. This is typically the legal name associated with the party.",
      "$ref" : "#/definitions/StringDatatype"
    },
    "OscalMetadataMetadataPartyShortNameFieldType" : {
      "$id" : "#/definitions/OscalMetadataMetadataPartyShortNameFieldType",
      "title" : "Party Short Name",
      "description" : "A short common name, abbreviation, or acronym for the party.",
      "$ref" : "#/definitions/StringDatatype"
    },
    "OscalMetadataMetadataPartyExternalIdFieldType" : {
      "$id" : "#/definitions/OscalMetadataMetadataPartyExternalIdFieldType",
      "title" : "Party External Identifier",
      "description" : "An identifier for a person or organization using a designated scheme. e.g. an Open Researcher and Contributor ID (ORCID).",
      "type" : "object",
      "properties" : {
        "scheme" : {
          "$ref" : "#/definitions/OscalMetadataMetadataPartyExternalIdSchemeFlagType"
        },
        "id" : {
          "$ref" : "#/definitions/StringDatatype"
        }
      },
      "required" : [ "scheme", "id" ],
      "additionalProperties" : false
    },
    "OscalMetadataMetadataPartyExternalIdSchemeFlagType" : {
      "$id" : "#/definitions/OscalMetadataMetadataPartyExternalIdSchemeFlagType",
      "title" : "External Identifier Schema",
      "description" : "Indicates the type of external identifier.\n\nThis value must be an [absolute URI](https://pages.nist.gov/OSCAL/concepts/uri-use/#absolute-uri) that serves as a [naming system identifier](https://pages.nist.gov/OSCAL/concepts/uri-use/#use-as-a-naming-system-identifier).",
      "$ref" : "#/definitions/URIDatatype"
    },
    "OscalMetadataLocationUuidFieldType" : {
      "$id" : "#/definitions/OscalMetadataLocationUuidFieldType",
      "title" : "Location Universally Unique Identifier Reference",
      "description" : "Reference to a location by UUID.",
      "$ref" : "#/definitions/UUIDDatatype"
    },
    "OscalMetadataMetadataPartyMemberOfOrganizationFieldType" : {
      "$id" : "#/definitions/OscalMetadataMetadataPartyMemberOfOrganizationFieldType",
      "title" : "Organizational Affiliation",
      "description" : "A reference to another `party` by UUID, typically an organization, that this subject is associated with.\n\nSince the reference target of an organizational affiliation must be another `party` (whether further qualified as person or organization) as inidcated by its `uuid`. As a [machine-oriented](https://pages.nist.gov/OSCAL/concepts/identifier-use/#machine-oriented) identifier with uniqueness across document and trans-document scope, this `uuid` value is sufficient to reference the data item locally or globally across related documents, e.g., in an imported OSCAL instance.\n\nParties of both the `person` or `organization` type can be associated with an organization using the `member-of-organization`.",
      "$ref" : "#/definitions/UUIDDatatype"
    },
    "OscalMetadataResponsiblePartyAssemblyType" : {
      "$id" : "#/definitions/OscalMetadataResponsiblePartyAssemblyType",
      "title" : "Responsible Party",
      "description" : "A reference to a set of persons and/or organizations that have responsibility for performing the referenced role in the context of the containing object.\n\nA `responsible-party` requires one or more `party-uuid` references creating a strong relationship arc between the referenced `role-id` and the reference parties. This differs in semantics from `responsible-role` which doesn't require that a `party-uuid` is referenced.\n\nThe scope of use of this object determines if the responsibility has been performed or will be performed in the future. The containing object will describe the intent.",
      "type" : "object",
      "properties" : {
        "role-id" : {
          "$ref" : "#/definitions/OscalMetadataResponsiblePartyRoleIdFlagType"
        },
        "party-uuids" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OscalMetadataPartyUuidFieldType"
          },
          "minItems" : 1
        },
        "props" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OscalMetadataPropAssemblyType"
          },
          "minItems" : 1
        },
        "links" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OscalMetadataLinkAssemblyType"
          },
          "minItems" : 1
        },
        "remarks" : {
          "$ref" : "#/definitions/OscalMetadataRemarksFieldType"
        }
      },
      "required" : [ "role-id", "party-uuids" ],
      "additionalProperties" : false
    },
    "OscalMetadataResponsiblePartyRoleIdFlagType" : {
      "$id" : "#/definitions/OscalMetadataResponsiblePartyRoleIdFlagType",
      "title" : "Responsible Role",
      "description" : "A reference to a `role` performed by a `party`.",
      "$ref" : "#/definitions/TokenDatatype"
    },
    "OscalMetadataPartyUuidFieldType" : {
      "$id" : "#/definitions/OscalMetadataPartyUuidFieldType",
      "title" : "Party Universally Unique Identifier Reference",
      "description" : "Reference to a party by UUID.",
      "$ref" : "#/definitions/UUIDDatatype"
    },
    "OscalMetadataActionAssemblyType" : {
      "$id" : "#/definitions/OscalMetadataActionAssemblyType",
      "title" : "Action",
      "description" : "An action applied by a role within a given party to the content.",
      "type" : "object",
      "properties" : {
        "uuid" : {
          "$ref" : "#/definitions/OscalMetadataActionUuidFlagType"
        },
        "date" : {
          "$ref" : "#/definitions/OscalMetadataActionDateFlagType"
        },
        "type" : {
          "$ref" : "#/definitions/OscalMetadataActionTypeFlagType"
        },
        "system" : {
          "$ref" : "#/definitions/OscalMetadataActionSystemFlagType"
        },
        "props" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OscalMetadataPropAssemblyType"
          },
          "minItems" : 1
        },
        "links" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OscalMetadataLinkAssemblyType"
          },
          "minItems" : 1
        },
        "responsible-parties" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OscalMetadataResponsiblePartyAssemblyType"
          },
          "minItems" : 1
        },
        "remarks" : {
          "$ref" : "#/definitions/OscalMetadataRemarksFieldType"
        }
      },
      "required" : [ "uuid", "type", "system" ],
      "additionalProperties" : false
    },
    "OscalMetadataActionUuidFlagType" : {
      "$id" : "#/definitions/OscalMetadataActionUuidFlagType",
      "title" : "Action Universally Unique Identifier",
      "description" : "A unique identifier that can be used to reference this defined action elsewhere in an OSCAL document. A UUID should be consistently used for a given location across revisions of the document.",
      "$ref" : "#/definitions/UUIDDatatype"
    },
    "OscalMetadataActionDateFlagType" : {
      "$id" : "#/definitions/OscalMetadataActionDateFlagType",
      "title" : "Action Occurrence Date",
      "description" : "The date and time when the action occurred.",
      "$ref" : "#/definitions/DateTimeWithTimezoneDatatype"
    },
    "OscalMetadataActionTypeFlagType" : {
      "$id" : "#/definitions/OscalMetadataActionTypeFlagType",
      "title" : "Action Type",
      "description" : "The type of action documented by the assembly, such as an approval.",
      "$ref" : "#/definitions/TokenDatatype"
    },
    "OscalMetadataActionSystemFlagType" : {
      "$id" : "#/definitions/OscalMetadataActionSystemFlagType",
      "title" : "Action Type System",
      "description" : "Specifies the action type system used.\n\nProvides a means to segment the value space for the `type`, so that different organizations and individuals can assert control over the allowed `action`'s `type`. This allows the semantics associated with a given `type` to be defined on an organization-by-organization basis.\n\nAn organization MUST use a URI that they have control over. e.g., a domain registered to the organization in a URI, a registered uniform resource names (URN) namespace.",
      "$ref" : "#/definitions/URIDatatype"
    },
    "OscalControlCommonParamAssemblyType" : {
      "$id" : "#/definitions/OscalControlCommonParamAssemblyType",
      "title" : "Parameter",
      "description" : "Parameters provide a mechanism for the dynamic assignment of value(s) in a control.\n\nIn a catalog, a parameter is typically used as a placeholder for the future assignment of a parameter value, although the OSCAL model allows for the direct assignment of a value if desired by the control author. The `value` may be optionally used to specify one or more values. If no value is provided, then it is expected that the value will be provided at the Profile or Implementation layer.\n\nA parameter can include a variety of metadata options that support the future solicitation of one or more values. A `label` provides a textual placeholder that can be used in a tool to solicit parameter value input, or to display in catalog documentation. The `desc` provides a short description of what the parameter is used for, which can be used in tooling to help a user understand how to use the parameter. A `constraint` can be used to provide criteria for the allowed values. A `guideline` provides a recommendation for the use of a parameter.",
      "type" : "object",
      "anyOf" : [ {
        "properties" : {
          "id" : {
            "$ref" : "#/definitions/OscalControlCommonParamIdFlagType"
          },
          "class" : {
            "$ref" : "#/definitions/OscalControlCommonParamClassFlagType"
          },
          "depends-on" : {
            "$ref" : "#/definitions/OscalControlCommonParamDependsOnFlagType"
          },
          "props" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/OscalMetadataPropAssemblyType"
            },
            "minItems" : 1
          },
          "links" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/OscalMetadataLinkAssemblyType"
            },
            "minItems" : 1
          },
          "label" : {
            "$ref" : "#/definitions/OscalControlCommonParamLabelFieldType"
          },
          "usage" : {
            "$ref" : "#/definitions/OscalControlCommonParamUsageFieldType"
          },
          "constraints" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/OscalControlCommonParameterConstraintAssemblyType"
            },
            "minItems" : 1
          },
          "guidelines" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/OscalControlCommonParameterGuidelineAssemblyType"
            },
            "minItems" : 1
          },
          "remarks" : {
            "$ref" : "#/definitions/OscalMetadataRemarksFieldType"
          },
          "values" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/OscalControlCommonParameterValueFieldType"
            },
            "minItems" : 1
          }
        },
        "required" : [ "id" ],
        "additionalProperties" : false
      }, {
        "properties" : {
          "id" : {
            "$ref" : "#/definitions/OscalControlCommonParamIdFlagType"
          },
          "class" : {
            "$ref" : "#/definitions/OscalControlCommonParamClassFlagType"
          },
          "depends-on" : {
            "$ref" : "#/definitions/OscalControlCommonParamDependsOnFlagType"
          },
          "props" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/OscalMetadataPropAssemblyType"
            },
            "minItems" : 1
          },
          "links" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/OscalMetadataLinkAssemblyType"
            },
            "minItems" : 1
          },
          "label" : {
            "$ref" : "#/definitions/OscalControlCommonParamLabelFieldType"
          },
          "usage" : {
            "$ref" : "#/definitions/OscalControlCommonParamUsageFieldType"
          },
          "constraints" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/OscalControlCommonParameterConstraintAssemblyType"
            },
            "minItems" : 1
          },
          "guidelines" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/OscalControlCommonParameterGuidelineAssemblyType"
            },
            "minItems" : 1
          },
          "remarks" : {
            "$ref" : "#/definitions/OscalMetadataRemarksFieldType"
          },
          "select" : {
            "$ref" : "#/definitions/OscalControlCommonParameterSelectionAssemblyType"
          }
        },
        "required" : [ "id" ],
        "additionalProperties" : false
      } ]
    },
    "OscalControlCommonParamIdFlagType" : {
      "$id" : "#/definitions/OscalControlCommonParamIdFlagType",
      "title" : "Parameter Identifier",
      "description" : "A unique identifier for the parameter.",
      "$ref" : "#/definitions/TokenDatatype"
    },
    "OscalControlCommonParamClassFlagType" : {
      "$id" : "#/definitions/OscalControlCommonParamClassFlagType",
      "title" : "Parameter Class",
      "description" : "A textual label that provides a characterization of the type, purpose, use or scope of the parameter.\n\nA `class` can be used in validation rules to express extra constraints over named items of a specific `class` value.",
      "$ref" : "#/definitions/TokenDatatype"
    },
    "OscalControlCommonParamDependsOnFlagType" : {
      "$id" : "#/definitions/OscalControlCommonParamDependsOnFlagType",
      "title" : "Depends on",
      "description" : "**(deprecated)** Another parameter invoking this one. This construct has been deprecated and should not be used.",
      "$ref" : "#/definitions/TokenDatatype"
    },
    "OscalControlCommonParamLabelFieldType" : {
      "$id" : "#/definitions/OscalControlCommonParamLabelFieldType",
      "title" : "Parameter Label",
      "description" : "A short, placeholder name for the parameter, which can be used as a substitute for a `value` if no value is assigned.\n\nThe label value is intended use when rendering a parameter in generated documentation or a user interface when a parameter is referenced. Note that labels are not required to be distinctive, which means that parameters within the same control may have the same label.",
      "$ref" : "#/definitions/MarkupLineDatatype"
    },
    "OscalControlCommonParamUsageFieldType" : {
      "$id" : "#/definitions/OscalControlCommonParamUsageFieldType",
      "title" : "Parameter Usage Description",
      "description" : "Describes the purpose and use of a parameter.",
      "$ref" : "#/definitions/MarkupMultilineDatatype"
    },
    "OscalControlCommonParameterConstraintAssemblyType" : {
      "$id" : "#/definitions/OscalControlCommonParameterConstraintAssemblyType",
      "title" : "Constraint",
      "description" : "A formal or informal expression of a constraint or test.",
      "type" : "object",
      "properties" : {
        "description" : {
          "$ref" : "#/definitions/OscalControlCommonParameterConstraintDescriptionFieldType"
        },
        "tests" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OscalControlCommonParameterConstraintTestAssemblyType"
          },
          "minItems" : 1
        }
      },
      "additionalProperties" : false
    },
    "OscalControlCommonParameterConstraintDescriptionFieldType" : {
      "$id" : "#/definitions/OscalControlCommonParameterConstraintDescriptionFieldType",
      "title" : "Constraint Description",
      "description" : "A textual summary of the constraint to be applied.",
      "$ref" : "#/definitions/MarkupMultilineDatatype"
    },
    "OscalControlCommonParameterConstraintTestAssemblyType" : {
      "$id" : "#/definitions/OscalControlCommonParameterConstraintTestAssemblyType",
      "title" : "Constraint Test",
      "description" : "A test expression which is expected to be evaluated by a tool.",
      "type" : "object",
      "properties" : {
        "expression" : {
          "$ref" : "#/definitions/OscalControlCommonParameterConstraintTestExpressionFieldType"
        },
        "remarks" : {
          "$ref" : "#/definitions/OscalMetadataRemarksFieldType"
        }
      },
      "required" : [ "expression" ],
      "additionalProperties" : false
    },
    "OscalControlCommonParameterConstraintTestExpressionFieldType" : {
      "$id" : "#/definitions/OscalControlCommonParameterConstraintTestExpressionFieldType",
      "title" : "Constraint test",
      "description" : "A formal (executable) expression of a constraint.",
      "$ref" : "#/definitions/StringDatatype"
    },
    "OscalControlCommonParameterGuidelineAssemblyType" : {
      "$id" : "#/definitions/OscalControlCommonParameterGuidelineAssemblyType",
      "title" : "Guideline",
      "description" : "A prose statement that provides a recommendation for the use of a parameter.",
      "type" : "object",
      "properties" : {
        "prose" : {
          "$ref" : "#/definitions/OscalControlCommonParameterGuidelineProseFieldType"
        }
      },
      "required" : [ "prose" ],
      "additionalProperties" : false
    },
    "OscalControlCommonParameterGuidelineProseFieldType" : {
      "$id" : "#/definitions/OscalControlCommonParameterGuidelineProseFieldType",
      "title" : "Guideline Text",
      "description" : "Prose permits multiple paragraphs, lists, tables etc.",
      "$ref" : "#/definitions/MarkupMultilineDatatype"
    },
    "OscalControlCommonParameterValueFieldType" : {
      "$id" : "#/definitions/OscalControlCommonParameterValueFieldType",
      "title" : "Parameter Value",
      "description" : "A parameter value or set of values.",
      "$ref" : "#/definitions/StringDatatype"
    },
    "OscalControlCommonParameterSelectionAssemblyType" : {
      "$id" : "#/definitions/OscalControlCommonParameterSelectionAssemblyType",
      "title" : "Selection",
      "description" : "Presenting a choice among alternatives.\n\nA set of parameter value choices, that may be picked from to set the parameter value.",
      "type" : "object",
      "properties" : {
        "how-many" : {
          "$ref" : "#/definitions/OscalControlCommonParameterSelectionHowManyFlagType"
        },
        "choice" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OscalControlCommonParameterSelectionChoiceFieldType"
          },
          "minItems" : 1
        }
      },
      "additionalProperties" : false
    },
    "OscalControlCommonParameterSelectionHowManyFlagType" : {
      "$id" : "#/definitions/OscalControlCommonParameterSelectionHowManyFlagType",
      "title" : "Parameter Cardinality",
      "description" : "Describes the number of selections that must occur. Without this setting, only one value should be assumed to be permitted.",
      "$ref" : "#/definitions/TokenDatatype"
    },
    "OscalControlCommonParameterSelectionChoiceFieldType" : {
      "$id" : "#/definitions/OscalControlCommonParameterSelectionChoiceFieldType",
      "title" : "Choice",
      "description" : "A value selection among several such options.",
      "$ref" : "#/definitions/MarkupLineDatatype"
    },
    "OscalCatalogControlAssemblyType" : {
      "$id" : "#/definitions/OscalCatalogControlAssemblyType",
      "title" : "Control",
      "description" : "A [structured object](https://pages.nist.gov/OSCAL/concepts/terminology/#control) representing a requirement or guideline, which when implemented will reduce an aspect of risk related to an information system and its information.\n\nEach security or privacy control within the catalog is defined by a distinct control instance. Controls may be as complex or as simple as a catalog defines them. They may be decomposed or further specified into child `control` objects, for example to represent control enhancements or specific breakouts of control functionality, to be maintained as discrete requirements. Controls may also contain structured parts (using `part`) and they may be grouped together in families or classes with `group`.\n\nControl structures in OSCAL will also exhibit regularities and rules that are not codified in OSCAL but in its applications or domains of application. For example, for catalogs describing controls as defined by NIST SP 800-53, a control must have a part with the name \"statement\", which represents the textual narrative of the control. This \"statement\" part must occur only once, but may have nested parts to allow for multiple paragraphs or sections of text. This organization supports addressability of this data content as long as, and only insofar as, it is consistently implemented across the control set. As given with these model definitions, constraints defined and assigned here can aid in ensuring this regularity; but other such constraints and other useful patterns of use remain to be discovered and described.",
      "type" : "object",
      "properties" : {
        "id" : {
          "$ref" : "#/definitions/OscalCatalogControlIdFlagType"
        },
        "class" : {
          "$ref" : "#/definitions/OscalCatalogControlClassFlagType"
        },
        "title" : {
          "$ref" : "#/definitions/OscalCatalogControlTitleFieldType"
        },
        "params" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OscalControlCommonParamAssemblyType"
          },
          "minItems" : 1
        },
        "props" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OscalMetadataPropAssemblyType"
          },
          "minItems" : 1
        },
        "links" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OscalMetadataLinkAssemblyType"
          },
          "minItems" : 1
        },
        "parts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OscalControlCommonPartAssemblyType"
          },
          "minItems" : 1
        },
        "mapping" : {
          "$ref" : "#/definitions/OscalCatalogControlMappingAssemblyType"
        },
        "controls" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OscalCatalogControlAssemblyType"
          },
          "minItems" : 1
        }
      },
      "required" : [ "id", "title" ],
      "additionalProperties" : false
    },
    "OscalCatalogControlIdFlagType" : {
      "$id" : "#/definitions/OscalCatalogControlIdFlagType",
      "title" : "Control Identifier",
      "description" : "Identifies a control such that it can be referenced in the defining catalog and other OSCAL instances (e.g., profiles).",
      "$ref" : "#/definitions/TokenDatatype"
    },
    "OscalCatalogControlClassFlagType" : {
      "$id" : "#/definitions/OscalCatalogControlClassFlagType",
      "title" : "Control Class",
      "description" : "A textual label that provides a sub-type or characterization of the control.\n\nA `class` can be used in validation rules to express extra\nconstraints over named items of a specific `class`\nvalue.\n\nA `class` can also be used in an OSCAL profile as a means to\ntarget an alteration to control content.",
      "$ref" : "#/definitions/TokenDatatype"
    },
    "OscalCatalogControlTitleFieldType" : {
      "$id" : "#/definitions/OscalCatalogControlTitleFieldType",
      "title" : "Control Title",
      "description" : "A name given to the control, which may be used by a tool for display and navigation.",
      "$ref" : "#/definitions/MarkupLineDatatype"
    },
    "OscalControlCommonPartAssemblyType" : {
      "$id" : "#/definitions/OscalControlCommonPartAssemblyType",
      "title" : "Part",
      "description" : "An annotated, markup-based textual element of a control's or catalog group's definition, or a child of another part.\n\nA `part` provides for logical partitioning of prose, and can be thought of as a grouping structure (e.g., section). A `part` can have child parts allowing for arbitrary nesting of prose content (e.g., statement hierarchy). A `part` can contain `prop` objects that allow for enriching prose text with structured name/value information.\n\nA `part` can be assigned an optional `id`, which allows references to this part from within a catalog, or within an instance of another OSCAL model that has a need to reference the part. Examples of where part referencing is used in OSCAL include:\n\n* Referencing a part by id to tailor (make modifications to) a control statement in a profile.\n* Referencing a control statement represented by a part in a system security plan implemented-requirement where a statement-level response is desired.\n\nUse of `part` and `prop` provides for a wide degree of extensibility within the OSCAL catalog model. The optional `ns` provides a means to qualify a part's `name`, allowing for organization-specific vocabularies to be defined with clear semantics. Any organization that extends OSCAL in this way should consistently assign a `ns` value that represents the organization, making a given namespace qualified `name` unique to that organization. This allows the combination of `ns` and `name` to always be unique and unambiguous, even when mixed with extensions from other organizations. Each organization is responsible for governance of their own extensions, and is strongly encouraged to publish their extensions as standards to their user community. If no `ns` is provided, the name is expected to be in the \"OSCAL\" namespace.\n\nTo ensure a `ns` is unique to an organization and naming conflicts are avoided, a URI containing a DNS or other globally defined organization name should be used. For example, if FedRAMP and DoD both extend OSCAL, FedRAMP will use the `ns` `http://fedramp.gov/ns/oscal`, while DoD might use the `ns` `https://defense.gov` for any organization specific `name`.\n\nTools that process OSCAL content are not required to interpret unrecognized OSCAL extensions; however, OSCAL compliant tools should not modify or remove unrecognized extensions, unless there is a compelling reason to do so, such as data sensitivity.",
      "type" : "object",
      "properties" : {
        "id" : {
          "$ref" : "#/definitions/OscalControlCommonPartIdFlagType"
        },
        "name" : {
          "$ref" : "#/definitions/OscalControlCommonPartNameFlagType"
        },
        "ns" : {
          "$ref" : "#/definitions/OscalControlCommonPartNsFlagType"
        },
        "class" : {
          "$ref" : "#/definitions/OscalControlCommonPartClassFlagType"
        },
        "title" : {
          "$ref" : "#/definitions/OscalControlCommonPartTitleFieldType"
        },
        "props" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OscalMetadataPropAssemblyType"
          },
          "minItems" : 1
        },
        "prose" : {
          "$ref" : "#/definitions/OscalControlCommonPartProseFieldType"
        },
        "parts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OscalControlCommonPartAssemblyType"
          },
          "minItems" : 1
        },
        "links" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OscalMetadataLinkAssemblyType"
          },
          "minItems" : 1
        }
      },
      "required" : [ "name" ],
      "additionalProperties" : false
    },
    "OscalControlCommonPartIdFlagType" : {
      "$id" : "#/definitions/OscalControlCommonPartIdFlagType",
      "title" : "Part Identifier",
      "description" : "A unique identifier for the part.\n\nWhile a part is not required to have an id, it is often desirable for an identifier to be provided, which allows the part to be referenced elsewhere in OSCAL document instances. For this reason, it is RECOMMENDED to provide a part identifier.",
      "$ref" : "#/definitions/TokenDatatype"
    },
    "OscalControlCommonPartNameFlagType" : {
      "$id" : "#/definitions/OscalControlCommonPartNameFlagType",
      "title" : "Part Name",
      "description" : "A textual label that uniquely identifies the part's semantic type, which exists in a value space qualified by the `ns`.",
      "$ref" : "#/definitions/TokenDatatype"
    },
    "OscalControlCommonPartNsFlagType" : {
      "$id" : "#/definitions/OscalControlCommonPartNsFlagType",
      "title" : "Part Namespace",
      "description" : "An optional namespace qualifying the part's `name`. This allows different organizations to associate distinct semantics with the same name.\n\nThis value must be an [absolute URI](https://pages.nist.gov/OSCAL/concepts/uri-use/#absolute-uri) that serves as a [naming system identifier](https://pages.nist.gov/OSCAL/concepts/uri-use/#use-as-a-naming-system-identifier).\n\nWhen a `ns` is not provided, its value should be assumed to be `http://csrc.nist.gov/ns/oscal` and the name should be a name defined by the associated OSCAL model.",
      "$ref" : "#/definitions/URIDatatype"
    },
    "OscalControlCommonPartClassFlagType" : {
      "$id" : "#/definitions/OscalControlCommonPartClassFlagType",
      "title" : "Part Class",
      "description" : "An optional textual providing a sub-type or characterization of the part's `name`, or a category to which the part belongs.\n\nOne use of this flag is to distinguish or discriminate between the semantics of multiple parts of the same control with the same `name` and `ns` (since even within a given namespace it can be useful to overload a name).\n\nA `class` can be used in validation rules to express extra constraints over named items of a specific `class` value.\n\nA `class` can also be used in an OSCAL profile as a means to target an alteration to control content.",
      "$ref" : "#/definitions/TokenDatatype"
    },
    "OscalControlCommonPartTitleFieldType" : {
      "$id" : "#/definitions/OscalControlCommonPartTitleFieldType",
      "title" : "Part Title",
      "description" : "An optional name given to the part, which may be used by a tool for display and navigation.",
      "$ref" : "#/definitions/MarkupLineDatatype"
    },
    "OscalControlCommonPartProseFieldType" : {
      "$id" : "#/definitions/OscalControlCommonPartProseFieldType",
      "title" : "Part Text",
      "description" : "Permits multiple paragraphs, lists, tables etc.",
      "$ref" : "#/definitions/MarkupMultilineDatatype"
    },
    "OscalCatalogControlMappingAssemblyType" : {
      "$id" : "#/definitions/OscalCatalogControlMappingAssemblyType",
      "title" : "Mapping",
      "description" : "A mapping between the containing control and another resource.",
      "type" : "object",
      "properties" : {
        "uuid" : {
          "$ref" : "#/definitions/OscalCatalogControlMappingUuidFlagType"
        },
        "target-resource" : {
          "$ref" : "#/definitions/OscalMappingCommonMappingResourceReferenceAssemblyType"
        },
        "maps" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OscalMappingCommonMapAssemblyType"
          },
          "minItems" : 1
        }
      },
      "required" : [ "uuid", "target-resource", "maps" ],
      "additionalProperties" : false
    },
    "OscalCatalogControlMappingUuidFlagType" : {
      "$id" : "#/definitions/OscalCatalogControlMappingUuidFlagType",
      "title" : "Mapping Identifier",
      "description" : "The unique identifier for the mapping.",
      "$ref" : "#/definitions/UUIDDatatype"
    },
    "OscalMappingCommonMappingResourceReferenceAssemblyType" : {
      "$id" : "#/definitions/OscalMappingCommonMappingResourceReferenceAssemblyType",
      "title" : "Mapped Resource Reference",
      "description" : "A reference to a resource that is either the source or target of a mapping.",
      "type" : "object",
      "properties" : {
        "type" : {
          "$ref" : "#/definitions/OscalMappingCommonMappingResourceReferenceTypeFlagType"
        },
        "href" : {
          "$ref" : "#/definitions/OscalMappingCommonMappingResourceReferenceHrefFlagType"
        },
        "props" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OscalMetadataPropAssemblyType"
          },
          "minItems" : 1
        },
        "links" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OscalMetadataLinkAssemblyType"
          },
          "minItems" : 1
        },
        "remarks" : {
          "$ref" : "#/definitions/OscalMetadataRemarksFieldType"
        }
      },
      "required" : [ "type", "href" ],
      "additionalProperties" : false
    },
    "OscalMappingCommonMappingResourceReferenceTypeFlagType" : {
      "$id" : "#/definitions/OscalMappingCommonMappingResourceReferenceTypeFlagType",
      "title" : "Resource Type",
      "description" : "The semantic type of the resource.",
      "$ref" : "#/definitions/TokenDatatype"
    },
    "OscalMappingCommonMappingResourceReferenceHrefFlagType" : {
      "$id" : "#/definitions/OscalMappingCommonMappingResourceReferenceHrefFlagType",
      "title" : "Catalog or Profile Reference",
      "description" : "A resolvable URL reference to the base catalog or profile that this profile is tailoring.\n\nThis value may be one of:\n\n1. an [absolute URI](https://pages.nist.gov/OSCAL/concepts/uri-use/#absolute-uri) that points to a network resolvable resource,\n2. a [relative reference](https://pages.nist.gov/OSCAL/concepts/uri-use/#relative-reference) pointing to a network resolvable resource whose base URI is the URI of the containing document, or\n3. a bare URI fragment (i.e., \\`#uuid\\`) pointing to a `back-matter` resource in this or an imported document (see [linking to another OSCAL object](https://pages.nist.gov/OSCAL/concepts/uri-use/#linking-to-another-oscal-object)).",
      "$ref" : "#/definitions/URIReferenceDatatype"
    },
    "OscalMappingCommonMapAssemblyType" : {
      "$id" : "#/definitions/OscalMappingCommonMapAssemblyType",
      "title" : "Mapping Entry",
      "description" : "A relationship-based mapping between a source and target set consisting of members (i.e., controls, control statements) from the respective source and target.",
      "type" : "object",
      "properties" : {
        "uuid" : {
          "$ref" : "#/definitions/OscalMappingCommonMapUuidFlagType"
        },
        "props" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OscalMetadataPropAssemblyType"
          },
          "minItems" : 1
        },
        "links" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OscalMetadataLinkAssemblyType"
          },
          "minItems" : 1
        },
        "relationship" : {
          "$ref" : "#/definitions/OscalMappingCommonMapRelationshipFieldType"
        },
        "sources" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OscalMappingCommonMappingItemAssemblyType"
          },
          "minItems" : 1
        },
        "targets" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OscalMappingCommonMappingItemAssemblyType"
          },
          "minItems" : 1
        },
        "remarks" : {
          "$ref" : "#/definitions/OscalMetadataRemarksFieldType"
        }
      },
      "required" : [ "uuid", "relationship", "sources", "targets" ],
      "additionalProperties" : false
    },
    "OscalMappingCommonMapUuidFlagType" : {
      "$id" : "#/definitions/OscalMappingCommonMapUuidFlagType",
      "title" : "Mapping Entry Identifier",
      "description" : "The unique identifier for the mapping entry.",
      "$ref" : "#/definitions/UUIDDatatype"
    },
    "OscalMappingCommonMapRelationshipFieldType" : {
      "$id" : "#/definitions/OscalMappingCommonMapRelationshipFieldType",
      "title" : "Mapping Entry Relationship",
      "description" : "The relationship type for the mapping entry, which describes the relationship between the effective requirements of the specified source and target sets.\n\nWhen establishing relationships, mapping SHOULD be done at the control statement level where possible. This approach allows for more use of 'equivalent-to', which represents a stronger relationship than the other relationship types.",
      "type" : "object",
      "properties" : {
        "ns" : {
          "$ref" : "#/definitions/OscalMappingCommonMapRelationshipNsFlagType"
        },
        "type" : {
          "$ref" : "#/definitions/TokenDatatype"
        }
      },
      "required" : [ "type" ],
      "additionalProperties" : false
    },
    "OscalMappingCommonMapRelationshipNsFlagType" : {
      "$id" : "#/definitions/OscalMappingCommonMapRelationshipNsFlagType",
      "title" : "Relationship Value Namespace",
      "description" : "A namespace qualifying the relationship's value. This allows different organizations to associate distinct semantics for relationships with the same name.\n\nThis value must be an [absolute URI](https://pages.nist.gov/OSCAL/concepts/uri-use/#absolute-uri) that serves as a [naming system identifier](https://pages.nist.gov/OSCAL/concepts/uri-use/#use-as-a-naming-system-identifier).\n\nWhen a `ns` is not provided, its value should be assumed to be `http://csrc.nist.gov/ns/oscal` and the name should be a name defined by the associated OSCAL model.",
      "$ref" : "#/definitions/URIDatatype"
    },
    "OscalMappingCommonMappingItemAssemblyType" : {
      "$id" : "#/definitions/OscalMappingCommonMappingItemAssemblyType",
      "title" : "Mapping Entry Item (source or target)",
      "description" : "Identifies a specific edge within a source or target that is the subject of a mapping.",
      "type" : "object",
      "properties" : {
        "type" : {
          "$ref" : "#/definitions/OscalMappingCommonMappingItemTypeFlagType"
        },
        "id-ref" : {
          "$ref" : "#/definitions/OscalMappingCommonMappingItemIdRefFlagType"
        },
        "props" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OscalMetadataPropAssemblyType"
          },
          "minItems" : 1
        },
        "links" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OscalMetadataLinkAssemblyType"
          },
          "minItems" : 1
        },
        "remarks" : {
          "$ref" : "#/definitions/OscalMetadataRemarksFieldType"
        }
      },
      "required" : [ "type", "id-ref" ],
      "additionalProperties" : false
    },
    "OscalMappingCommonMappingItemTypeFlagType" : {
      "$id" : "#/definitions/OscalMappingCommonMappingItemTypeFlagType",
      "title" : "Subject Type",
      "description" : "The semantic type of the subject.",
      "$ref" : "#/definitions/TokenDatatype"
    },
    "OscalMappingCommonMappingItemIdRefFlagType" : {
      "$id" : "#/definitions/OscalMappingCommonMappingItemIdRefFlagType",
      "title" : "Subject Identifier Reference",
      "description" : "A reference to an identified subject that is of the specified `type`.",
      "$ref" : "#/definitions/StringDatatype"
    },
    "OscalCatalogGroupAssemblyType" : {
      "$id" : "#/definitions/OscalCatalogGroupAssemblyType",
      "title" : "Control Group",
      "description" : "A group of controls, or of groups of controls.\n\nCatalogs can use the catalog `group` construct to organize related controls into a single grouping, such as a family of controls or other logical organizational structure.\n\nA `group` may have its own properties, statements, parameters, and references, which are inherited by all controls of that are a member of the group.",
      "type" : "object",
      "anyOf" : [ {
        "properties" : {
          "id" : {
            "$ref" : "#/definitions/OscalCatalogGroupIdFlagType"
          },
          "class" : {
            "$ref" : "#/definitions/OscalCatalogGroupClassFlagType"
          },
          "title" : {
            "$ref" : "#/definitions/OscalCatalogGroupTitleFieldType"
          },
          "params" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/OscalControlCommonParamAssemblyType"
            },
            "minItems" : 1
          },
          "props" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/OscalMetadataPropAssemblyType"
            },
            "minItems" : 1
          },
          "links" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/OscalMetadataLinkAssemblyType"
            },
            "minItems" : 1
          },
          "parts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/OscalControlCommonPartAssemblyType"
            },
            "minItems" : 1
          },
          "groups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/OscalCatalogGroupAssemblyType"
            },
            "minItems" : 1
          }
        },
        "required" : [ "title" ],
        "additionalProperties" : false
      }, {
        "properties" : {
          "id" : {
            "$ref" : "#/definitions/OscalCatalogGroupIdFlagType"
          },
          "class" : {
            "$ref" : "#/definitions/OscalCatalogGroupClassFlagType"
          },
          "title" : {
            "$ref" : "#/definitions/OscalCatalogGroupTitleFieldType"
          },
          "params" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/OscalControlCommonParamAssemblyType"
            },
            "minItems" : 1
          },
          "props" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/OscalMetadataPropAssemblyType"
            },
            "minItems" : 1
          },
          "links" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/OscalMetadataLinkAssemblyType"
            },
            "minItems" : 1
          },
          "parts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/OscalControlCommonPartAssemblyType"
            },
            "minItems" : 1
          },
          "controls" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/OscalCatalogControlAssemblyType"
            },
            "minItems" : 1
          }
        },
        "required" : [ "title" ],
        "additionalProperties" : false
      } ]
    },
    "OscalCatalogGroupIdFlagType" : {
      "$id" : "#/definitions/OscalCatalogGroupIdFlagType",
      "title" : "Group Identifier",
      "description" : "Identifies the group for the purpose of cross-linking within the defining instance or from other instances that reference the catalog.",
      "$ref" : "#/definitions/TokenDatatype"
    },
    "OscalCatalogGroupClassFlagType" : {
      "$id" : "#/definitions/OscalCatalogGroupClassFlagType",
      "title" : "Group Class",
      "description" : "A textual label that provides a sub-type or characterization of the group.\n\nA `class` can be used in validation rules to express extra constraints over named items of a specific `class` value.\n\nA `class` can also be used in an OSCAL profile as a means to target an alteration to control content.",
      "$ref" : "#/definitions/TokenDatatype"
    },
    "OscalCatalogGroupTitleFieldType" : {
      "$id" : "#/definitions/OscalCatalogGroupTitleFieldType",
      "title" : "Group Title",
      "description" : "A name given to the group, which may be used by a tool for display and navigation.",
      "$ref" : "#/definitions/MarkupLineDatatype"
    },
    "OscalMetadataBackMatterAssemblyType" : {
      "$id" : "#/definitions/OscalMetadataBackMatterAssemblyType",
      "title" : "Back matter",
      "description" : "A collection of resources that may be referenced from within the OSCAL document instance.\n\nProvides a collection of identified `resource` objects that can be referenced by a `link` with a `rel` value of \"reference\" and an `href` value that is a fragment \"#\" followed by a reference to a reference's `uuid`. Other specialized link \"rel\" values also use this pattern when indicated in that context of use.",
      "type" : "object",
      "properties" : {
        "resources" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OscalMetadataBackMatterResourceAssemblyType"
          },
          "minItems" : 1
        }
      },
      "additionalProperties" : false
    },
    "OscalMetadataBackMatterResourceAssemblyType" : {
      "$id" : "#/definitions/OscalMetadataBackMatterResourceAssemblyType",
      "title" : "Resource",
      "description" : "A resource associated with content in the containing document instance. A resource may be directly included in the document using base64 encoding or may point to one or more equivalent internet resources.\n\nA resource can be used in two ways. 1) it may point to an specific retrievable network resource using a `rlink`, or 2) it may be included as an attachment using a `base64`. A resource may contain multiple `rlink` and `base64` entries that represent alternative download locations (rlink) and attachments (base64) for the same resource.\n\nBoth rlink and base64 allow for a `media-type` to be specified, which is used to distinguish between different representations of the same resource (e.g., Microsoft Word, PDF). When multiple `rlink` and `base64` items are included for a given resource, all items must contain equivalent information. This allows the document consumer to choose a preferred item to process based on a the selected item's `media-type`. This is extremely important when the items represent OSCAL content that is represented in alternate formats (i.e., XML, JSON, YAML), allowing the same OSCAL data to be processed from any of the available formats indicated by the items.\n\nWhen a resource includes a citation, then the `title` and `citation` properties must both be included.",
      "type" : "object",
      "properties" : {
        "uuid" : {
          "$ref" : "#/definitions/OscalMetadataBackMatterResourceUuidFlagType"
        },
        "title" : {
          "$ref" : "#/definitions/OscalMetadataBackMatterResourceTitleFieldType"
        },
        "description" : {
          "$ref" : "#/definitions/OscalMetadataBackMatterResourceDescriptionFieldType"
        },
        "props" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OscalMetadataPropAssemblyType"
          },
          "minItems" : 1
        },
        "document-ids" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OscalMetadataDocumentIdFieldType"
          },
          "minItems" : 1
        },
        "citation" : {
          "$ref" : "#/definitions/OscalMetadataBackMatterResourceCitationAssemblyType"
        },
        "rlinks" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OscalMetadataBackMatterResourceRlinkAssemblyType"
          },
          "minItems" : 1
        },
        "base64" : {
          "$ref" : "#/definitions/OscalMetadataBackMatterResourceBase64FieldType"
        },
        "remarks" : {
          "$ref" : "#/definitions/OscalMetadataRemarksFieldType"
        }
      },
      "required" : [ "uuid" ],
      "additionalProperties" : false
    },
    "OscalMetadataBackMatterResourceUuidFlagType" : {
      "$id" : "#/definitions/OscalMetadataBackMatterResourceUuidFlagType",
      "title" : "Resource Universally Unique Identifier",
      "description" : "A unique identifier for a resource.",
      "$ref" : "#/definitions/UUIDDatatype"
    },
    "OscalMetadataBackMatterResourceTitleFieldType" : {
      "$id" : "#/definitions/OscalMetadataBackMatterResourceTitleFieldType",
      "title" : "Resource Title",
      "description" : "An optional name given to the resource, which may be used by a tool for display and navigation.",
      "$ref" : "#/definitions/MarkupLineDatatype"
    },
    "OscalMetadataBackMatterResourceDescriptionFieldType" : {
      "$id" : "#/definitions/OscalMetadataBackMatterResourceDescriptionFieldType",
      "title" : "Resource Description",
      "description" : "An optional short summary of the resource used to indicate the purpose of the resource.",
      "$ref" : "#/definitions/MarkupMultilineDatatype"
    },
    "OscalMetadataBackMatterResourceCitationAssemblyType" : {
      "$id" : "#/definitions/OscalMetadataBackMatterResourceCitationAssemblyType",
      "title" : "Citation",
      "description" : "An optional citation consisting of end note text using structured markup.",
      "type" : "object",
      "properties" : {
        "text" : {
          "$ref" : "#/definitions/OscalMetadataBackMatterResourceCitationTextFieldType"
        },
        "props" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OscalMetadataPropAssemblyType"
          },
          "minItems" : 1
        },
        "links" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OscalMetadataLinkAssemblyType"
          },
          "minItems" : 1
        }
      },
      "required" : [ "text" ],
      "additionalProperties" : false
    },
    "OscalMetadataBackMatterResourceCitationTextFieldType" : {
      "$id" : "#/definitions/OscalMetadataBackMatterResourceCitationTextFieldType",
      "title" : "Citation Text",
      "description" : "A line of citation text.",
      "$ref" : "#/definitions/MarkupLineDatatype"
    },
    "OscalMetadataBackMatterResourceRlinkAssemblyType" : {
      "$id" : "#/definitions/OscalMetadataBackMatterResourceRlinkAssemblyType",
      "title" : "Resource link",
      "description" : "A URL-based pointer to an external resource with an optional hash for verification and change detection.\n\nMultiple `rlink` objects can be included for a resource. In such a case, all provided `rlink` items are intended to be equivalent in content, but may differ in structure or format.\n\nA `media-type` is used to identify the format of a given rlink, and can be used to differentiate items in a collection of rlinks. The `media-type` provides a hint to the OSCAL document consumer about the structure of the resource referenced by the `rlink`.",
      "type" : "object",
      "properties" : {
        "href" : {
          "$ref" : "#/definitions/OscalMetadataBackMatterResourceRlinkHrefFlagType"
        },
        "media-type" : {
          "$ref" : "#/definitions/OscalMetadataMediaTypeFlagType"
        },
        "hashes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OscalMetadataHashFieldType"
          },
          "minItems" : 1
        }
      },
      "required" : [ "href" ],
      "additionalProperties" : false
    },
    "OscalMetadataBackMatterResourceRlinkHrefFlagType" : {
      "$id" : "#/definitions/OscalMetadataBackMatterResourceRlinkHrefFlagType",
      "title" : "Hypertext Reference",
      "description" : "A resolvable URL pointing to the referenced resource.\n\nThis value may be either:\n\n1. an [absolute URI](https://pages.nist.gov/OSCAL/concepts/uri-use/#absolute-uri) that points to a network resolvable resource,\n2. a [relative reference](https://pages.nist.gov/OSCAL/concepts/uri-use/#relative-reference) pointing to a network resolvable resource whose base URI is the URI of the containing document, or",
      "$ref" : "#/definitions/URIReferenceDatatype"
    },
    "OscalMetadataHashFieldType" : {
      "$id" : "#/definitions/OscalMetadataHashFieldType",
      "title" : "Hash",
      "description" : "A representation of a cryptographic digest generated over a resource using a specified hash algorithm.",
      "type" : "object",
      "properties" : {
        "algorithm" : {
          "$ref" : "#/definitions/OscalMetadataHashAlgorithmFlagType"
        },
        "value" : {
          "$ref" : "#/definitions/StringDatatype"
        }
      },
      "required" : [ "algorithm", "value" ],
      "additionalProperties" : false
    },
    "OscalMetadataHashAlgorithmFlagType" : {
      "$id" : "#/definitions/OscalMetadataHashAlgorithmFlagType",
      "title" : "Hash algorithm",
      "description" : "The digest method by which a hash is derived.\n\nAny other value used MUST be a value defined in the W3C [XML Security Algorithm Cross-Reference](https://www.w3.org/TR/xmlsec-algorithms/#digest-method-uris) Digest Methods (W3C, April 2013) or [RFC 6931 Section 2.1.5](https://tools.ietf.org/html/rfc6931#section-2.1.5) New SHA Functions.",
      "$ref" : "#/definitions/StringDatatype"
    },
    "OscalMetadataBackMatterResourceBase64FieldType" : {
      "$id" : "#/definitions/OscalMetadataBackMatterResourceBase64FieldType",
      "title" : "Base64",
      "description" : "A resource encoded using the Base64 alphabet defined by [RFC 2045](https://www.rfc-editor.org/rfc/rfc2045.html).",
      "type" : "object",
      "properties" : {
        "filename" : {
          "$ref" : "#/definitions/OscalMetadataBackMatterResourceBase64FilenameFlagType"
        },
        "media-type" : {
          "$ref" : "#/definitions/OscalMetadataMediaTypeFlagType"
        },
        "value" : {
          "$ref" : "#/definitions/Base64Datatype"
        }
      },
      "required" : [ "value" ],
      "additionalProperties" : false
    },
    "OscalMetadataBackMatterResourceBase64FilenameFlagType" : {
      "$id" : "#/definitions/OscalMetadataBackMatterResourceBase64FilenameFlagType",
      "title" : "File Name",
      "description" : "Name of the file before it was encoded as Base64 to be embedded in a `resource`. This is the name that will be assigned to the file when the file is decoded.",
      "$ref" : "#/definitions/TokenDatatype"
    },
    "Base64Datatype" : {
      "type" : "string",
      "pattern" : "^[0-9A-Fa-f]+$",
      "contentEncoding" : "base64"
    },
    "DateTimeWithTimezoneDatatype" : {
      "type" : "string",
      "format" : "date-time",
      "pattern" : "^(((2000|2400|2800|(19|2[0-9](0[48]|[2468][048]|[13579][26])))-02-29)|(((19|2[0-9])[0-9]{2})-02-(0[1-9]|1[0-9]|2[0-8]))|(((19|2[0-9])[0-9]{2})-(0[13578]|10|12)-(0[1-9]|[12][0-9]|3[01]))|(((19|2[0-9])[0-9]{2})-(0[469]|11)-(0[1-9]|[12][0-9]|30)))T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]*[1-9])?(Z|(-((0[0-9]|1[0-2]):00|0[39]:30)|\\+((0[0-9]|1[0-4]):00|(0[34569]|10):30|(0[58]|12):45)))$"
    },
    "EmailAddressDatatype" : {
      "type" : "string",
      "format" : "email",
      "pattern" : "^.+@.+$"
    },
    "MarkupLineDatatype" : {
      "type" : "string",
      "pattern" : "^[^\n]+$"
    },
    "MarkupMultilineDatatype" : {
      "type" : "string"
    },
    "StringDatatype" : {
      "type" : "string",
      "pattern" : "^\\S(.*\\S)?$"
    },
    "TokenDatatype" : {
      "type" : "string",
      "pattern" : "^(\\p{L}|_)(\\p{L}|\\p{N}|[.\\-_])*$"
    },
    "URIDatatype" : {
      "type" : "string",
      "format" : "uri",
      "pattern" : "^[a-zA-Z][a-zA-Z0-9+\\-.]+:.+$"
    },
    "URIReferenceDatatype" : {
      "type" : "string",
      "format" : "uri-reference"
    },
    "UUIDDatatype" : {
      "type" : "string",
      "description" : "A type 4 ('random' or 'pseudorandom') or type 5 UUID per RFC 4122.",
      "pattern" : "^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$"
    }
  },
  "properties" : {
    "$schema" : {
      "type" : "string",
      "format" : "uri-reference"
    },
    "catalog" : {
      "$ref" : "#/definitions/OscalCatalogCatalogAssemblyType"
    }
  },
  "required" : [ "catalog" ],
  "additionalProperties" : false
}